{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicen\\\\Documents\\\\React\\\\visualizador\\\\src\\\\Pages\\\\ResumenDirectorio\\\\Comunas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function Comunas(props) {\n  _s();\n\n  const {\n    url_base,\n    column,\n    color\n  } = props;\n  const url = `${url_base}/total/`;\n  const [query, setQuery] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        variable: column\n      })\n    });\n    const responseJSON = await response.json();\n    setQuery(responseJSON);\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n  var array = new Set();\n  const scores = [];\n  const condicion = \"COD_DEPE2\";\n\n  if (column === condicion) {\n    scores = [\"Municipal\", \"P. Subvencionado\", \"P. pagado\", \"Adm. delegada\", \"Servicio local\"];\n  } else {\n    for (var a in query) {\n      console.log(query[a]);\n      const lista2 = [];\n\n      for (var b in query[a].RBD) {\n        var nose = query[a].RBD[b];\n        console.log(query[a].RBD[b]);\n        lista2.push(nose);\n        {\n          /**  Añadiendo los nombres de las comunas al set **/\n        }\n        array.add(b);\n      }\n\n      scores.push(lista2);\n    }\n\n    console.log(scores);\n  }\n\n  const colors = [`rgba(${color},0.3)`, `rgba(${color},0.5)`, `rgba(${color},0.7)`, `rgba(${color},0.9)`];\n  const data = {\n    labels: Array.from(array),\n    datasets: [{\n      label: \"2018\",\n      data: scores[0],\n      borderColor: colors[0],\n      backgroundColor: colors[0],\n      fill: true\n    }, {\n      label: \"2019\",\n      data: scores[1],\n      borderColor: colors[1],\n      backgroundColor: colors[1],\n      fill: true\n    }, {\n      label: \"2020\",\n      data: scores[2],\n      borderColor: colors[2],\n      backgroundColor: colors[2],\n      fill: true\n    }, {\n      label: \"2021\",\n      data: scores[3],\n      borderColor: colors[3],\n      backgroundColor: colors[3],\n      fill: true\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data,\n    height: 250,\n    options: {\n      maintainAspectRatio: false\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comunas, \"Yv2iIHMaz4skxcgDEqLvrRfGNrc=\");\n\n_c = Comunas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comunas\");","map":{"version":3,"sources":["C:/Users/vicen/Documents/React/visualizador/src/Pages/ResumenDirectorio/Comunas.js"],"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","Bar","register","Comunas","props","url_base","column","color","url","query","setQuery","fetchApi","response","fetch","method","headers","Accept","body","JSON","stringify","variable","responseJSON","json","array","Set","scores","condicion","a","console","log","lista2","b","RBD","nose","push","add","colors","data","labels","Array","from","datasets","label","borderColor","backgroundColor","fill","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport default function Comunas(props) {\r\n  const { url_base, column, color } = props;\r\n  const url = `${url_base}/total/`;\r\n  const [query, setQuery] = useState();\r\n\r\n  const fetchApi = async () => {\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        variable: column,\r\n      }),\r\n    });\r\n    const responseJSON = await response.json();\r\n    setQuery(responseJSON);\r\n  };\r\n  useEffect(() => {\r\n    fetchApi();\r\n  }, []);\r\n\r\n  var array = new Set();\r\n  const scores = [];\r\n  const condicion = \"COD_DEPE2\";\r\n  if (column === condicion) {\r\n    scores = [\r\n      \"Municipal\",\r\n      \"P. Subvencionado\",\r\n      \"P. pagado\",\r\n      \"Adm. delegada\",\r\n      \"Servicio local\",\r\n    ];\r\n  } else {\r\n    for (var a in query) {\r\n      console.log(query[a]);\r\n      const lista2 = [];\r\n      for (var b in query[a].RBD) {\r\n        var nose = query[a].RBD[b];\r\n        console.log(query[a].RBD[b]);\r\n        lista2.push(nose);\r\n\r\n        {\r\n          /**  Añadiendo los nombres de las comunas al set **/\r\n        }\r\n        array.add(b);\r\n      }\r\n      scores.push(lista2);\r\n    }\r\n    console.log(scores);\r\n  }\r\n\r\n  const colors = [\r\n    `rgba(${color},0.3)`,\r\n    `rgba(${color},0.5)`,\r\n    `rgba(${color},0.7)`,\r\n    `rgba(${color},0.9)`,\r\n  ];\r\n  const data = {\r\n    labels: Array.from(array),\r\n    datasets: [\r\n      {\r\n        label: \"2018\",\r\n        data: scores[0],\r\n        borderColor: colors[0],\r\n        backgroundColor: colors[0],\r\n        fill: true,\r\n      },\r\n      {\r\n        label: \"2019\",\r\n        data: scores[1],\r\n        borderColor: colors[1],\r\n        backgroundColor: colors[1],\r\n        fill: true,\r\n      },\r\n      {\r\n        label: \"2020\",\r\n        data: scores[2],\r\n        borderColor: colors[2],\r\n        backgroundColor: colors[2],\r\n        fill: true,\r\n      },\r\n      {\r\n        label: \"2021\",\r\n        data: scores[3],\r\n        borderColor: colors[3],\r\n        backgroundColor: colors[3],\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Bar data={data} height={250} options={{ maintainAspectRatio: false }} />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}