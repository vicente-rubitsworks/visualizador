{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicen\\\\Documents\\\\React\\\\visualizador\\\\src\\\\Pages\\\\Directorio\\\\Estado.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function Estado(props) {\n  _s();\n\n  const {\n    cambio\n  } = props;\n  const url = \"http://127.0.0.1:8000/directorio/estados/\";\n  const [estados, setEstados] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setEstados(responseJSON);\n  };\n\n  const labels = [];\n  const scores = [];\n\n  for (var a in estados) {\n    labels.push(estados[a].cod);\n    scores.push(estados[a].total);\n  }\n\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Mis datos\",\n      data: scores,\n      backgroundColor: [\"rgba(148,156,196,0.9)\", \"rgba(172,108,52,0.9)\", \"rgba(210,177,144,0.9)\", \"rgba(60,141,188,0.9)\", \"rgba(190,198,220,0.9)\"]\n    }]\n  };\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  if (cambio) {}\n\n  return /*#__PURE__*/_jsxDEV(Pie, {\n    data: data,\n    plugins: [ChartDataLabels],\n    height: 200,\n    options: {\n      maintainAspectRatio: false\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Estado, \"xS6QnhDlKA5SbdaLTyeJQ8Qyneg=\");\n\n_c = Estado;\n\nvar _c;\n\n$RefreshReg$(_c, \"Estado\");","map":{"version":3,"sources":["C:/Users/vicen/Documents/React/visualizador/src/Pages/Directorio/Estado.js"],"names":["React","useState","useEffect","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","ChartDataLabels","register","Estado","props","cambio","url","estados","setEstados","fetchApi","response","fetch","responseJSON","json","labels","scores","a","push","cod","total","data","datasets","label","backgroundColor","maintainAspectRatio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAK,IAAIC,OAAlB,EAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,UAA9D;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;AAEAL,OAAO,CAACM,QAAR,CAAiBL,UAAjB,EAA6BC,OAA7B,EAAsCC,MAAtC;AAEA,eAAe,SAASI,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAClC,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAf;AACF,QAAME,GAAG,GAAG,2CAAZ;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,EAAtC;;AACA,QAAMgB,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;AACA,UAAMM,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAL,IAAAA,UAAU,CAACI,YAAD,CAAV;AACD,GAJD;;AAMA,QAAME,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAT,IAAcT,OAAd,EAAuB;AACrBO,IAAAA,MAAM,CAACG,IAAP,CAAYV,OAAO,CAACS,CAAD,CAAP,CAAWE,GAAvB;AACAH,IAAAA,MAAM,CAACE,IAAP,CAAYV,OAAO,CAACS,CAAD,CAAP,CAAWG,KAAvB;AACD;;AAED,QAAMC,IAAI,GAAG;AACXN,IAAAA,MADW;AAEXO,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEF,MAAAA,IAAI,EAAEL,MAFR;AAGEQ,MAAAA,eAAe,EAAE,CACf,uBADe,EAEf,sBAFe,EAGf,uBAHe,EAIf,sBAJe,EAKf,uBALe;AAHnB,KADQ;AAFC,GAAb;AAgBA7B,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAGJ,MAAH,EAAU,CAET;;AAAA,sBACC,QAAC,GAAD;AACE,IAAA,IAAI,EAAEe,IADR;AAEE,IAAA,OAAO,EAAE,CAACnB,eAAD,CAFX;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,OAAO,EAAE;AAAEuB,MAAAA,mBAAmB,EAAE;AAAvB;AAJX;AAAA;AAAA;AAAA;AAAA,UADD;AASF;;GAlDuBrB,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport default function Estado(props) {\r\n    const {cambio}=props\r\n  const url = \"http://127.0.0.1:8000/directorio/estados/\";\r\n  const [estados, setEstados] = useState();\r\n  const fetchApi = async () => {\r\n    const response = await fetch(url);\r\n    const responseJSON = await response.json();\r\n    setEstados(responseJSON);\r\n  };\r\n\r\n  const labels = [];\r\n  const scores = [];\r\n\r\n  for (var a in estados) {\r\n    labels.push(estados[a].cod);\r\n    scores.push(estados[a].total);\r\n  }\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Mis datos\",\r\n        data: scores,\r\n        backgroundColor: [\r\n          \"rgba(148,156,196,0.9)\",\r\n          \"rgba(172,108,52,0.9)\",\r\n          \"rgba(210,177,144,0.9)\",\r\n          \"rgba(60,141,188,0.9)\",\r\n          \"rgba(190,198,220,0.9)\",\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  useEffect(() => {\r\n    fetchApi();\r\n  }, []);\r\n\r\n\r\n  if(cambio){\r\n\r\n  }return (\r\n    <Pie\r\n      data={data}\r\n      plugins={[ChartDataLabels]}\r\n      height={200}\r\n      options={{ maintainAspectRatio: false }}\r\n    />\r\n  );\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}