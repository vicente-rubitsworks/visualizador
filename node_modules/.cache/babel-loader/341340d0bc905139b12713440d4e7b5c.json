{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicen\\\\Documents\\\\React\\\\visualizador\\\\src\\\\Pages\\\\Directorio\\\\EstadosRurales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, Title, Tooltip, Legend);\nexport default function EstadosRurales(props) {\n  _s();\n\n  const {\n    cambio,\n    url_base\n  } = props;\n  const [estado, setEstado] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setEstado(responseJSON);\n  };\n\n  const labels = [];\n  const valor_rural = [];\n  const valor_urbano = [];\n\n  for (var a in estado) {\n    if (!labels.includes(estado[a].cod)) {\n      labels.push(estado[a].cod);\n    }\n\n    if (estado[a].rural === 0) {\n      valor_urbano.push(estado[a].total);\n    } else {\n      valor_rural.push(estado[a].total);\n    }\n  }\n\n  const data_dos = {\n    labels,\n    datasets: [{\n      label: \"Est. urbanos\",\n      data: valor_urbano,\n      backgroundColor: \"rgba(148,156,196,0.9)\"\n    }, {\n      label: \"Est. rurales\",\n      data: valor_rural,\n      backgroundColor: \"rgb(172,108,52,0.9)\"\n    }]\n  };\n  useEffect(() => {\n    fetchApi();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    height: 250,\n    options: {\n      maintainAspectRatio: false\n    },\n    data: data_dos\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EstadosRurales, \"Tsv+IuxXYwrGIf2FM+Zi1Ao/8Z4=\");\n\n_c = EstadosRurales;\n\nvar _c;\n\n$RefreshReg$(_c, \"EstadosRurales\");","map":{"version":3,"sources":["C:/Users/vicen/Documents/React/visualizador/src/Pages/Directorio/EstadosRurales.js"],"names":["React","useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","Title","Tooltip","Legend","register","EstadosRurales","props","cambio","url_base","estado","setEstado","fetchApi","response","fetch","url","responseJSON","json","labels","valor_rural","valor_urbano","a","includes","cod","push","rural","total","data_dos","datasets","label","data","backgroundColor","maintainAspectRatio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,UALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;;AAWAP,OAAO,CAACQ,QAAR,CACEP,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;AAUA,eAAe,SAASE,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAmBF,KAAzB;AAEA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,EAApC;;AACA,QAAMmB,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAD,CAA5B;AACA,UAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AACAN,IAAAA,SAAS,CAACK,YAAD,CAAT;AACD,GAJD;;AAMA,QAAME,MAAM,GAAG,EAAf;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,YAAY,GAAG,EAArB;;AAEA,OAAK,IAAIC,CAAT,IAAcX,MAAd,EAAsB;AACpB,QAAI,CAACQ,MAAM,CAACI,QAAP,CAAgBZ,MAAM,CAACW,CAAD,CAAN,CAAUE,GAA1B,CAAL,EAAqC;AACnCL,MAAAA,MAAM,CAACM,IAAP,CAAYd,MAAM,CAACW,CAAD,CAAN,CAAUE,GAAtB;AACD;;AACD,QAAIb,MAAM,CAACW,CAAD,CAAN,CAAUI,KAAV,KAAoB,CAAxB,EAA2B;AACzBL,MAAAA,YAAY,CAACI,IAAb,CAAkBd,MAAM,CAACW,CAAD,CAAN,CAAUK,KAA5B;AACD,KAFD,MAEO;AACLP,MAAAA,WAAW,CAACK,IAAZ,CAAiBd,MAAM,CAACW,CAAD,CAAN,CAAUK,KAA3B;AACD;AACF;;AACD,QAAMC,QAAQ,GAAG;AACfT,IAAAA,MADe;AAEfU,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,cADT;AAEEC,MAAAA,IAAI,EAAEV,YAFR;AAGEW,MAAAA,eAAe,EAAE;AAHnB,KADQ,EAMR;AACEF,MAAAA,KAAK,EAAE,cADT;AAEEC,MAAAA,IAAI,EAAEX,WAFR;AAGEY,MAAAA,eAAe,EAAE;AAHnB,KANQ;AAFK,GAAjB;AAeArC,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE,QAAC,GAAD;AACE,IAAA,MAAM,EAAE,GADV;AAEE,IAAA,OAAO,EAAE;AAAEoB,MAAAA,mBAAmB,EAAE;AAAvB,KAFX;AAGE,IAAA,IAAI,EAAEL;AAHR;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjDuBrB,c;;KAAAA,c","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport default function EstadosRurales(props) {\r\n  const {cambio, url_base}=props\r\n\r\n  const [estado, setEstado] = useState();\r\n  const fetchApi = async () => {\r\n    const response = await fetch(url);\r\n    const responseJSON = await response.json();\r\n    setEstado(responseJSON);\r\n  };\r\n\r\n  const labels = [];\r\n  const valor_rural = [];\r\n  const valor_urbano = [];\r\n\r\n  for (var a in estado) {\r\n    if (!labels.includes(estado[a].cod)) {\r\n      labels.push(estado[a].cod);\r\n    }\r\n    if (estado[a].rural === 0) {\r\n      valor_urbano.push(estado[a].total);\r\n    } else {\r\n      valor_rural.push(estado[a].total);\r\n    }\r\n  }\r\n  const data_dos = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Est. urbanos\",\r\n        data: valor_urbano,\r\n        backgroundColor: \"rgba(148,156,196,0.9)\",\r\n      },\r\n      {\r\n        label: \"Est. rurales\",\r\n        data: valor_rural,\r\n        backgroundColor: \"rgb(172,108,52,0.9)\",\r\n      },\r\n    ],\r\n  };\r\n  useEffect(() => {\r\n    fetchApi();\r\n  }, []);\r\n  return (\r\n    <Bar\r\n      height={250}\r\n      options={{ maintainAspectRatio: false }}\r\n      data={data_dos}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}