{"ast":null,"code":"import { createErrorClass } from './createErrorClass';\nexport var EmptyError = createErrorClass(function (_super) {\n  return function EmptyErrorImpl() {\n    _super(this);\n\n    this.name = 'EmptyError';\n    this.message = 'no elements in sequence';\n  };\n});","map":{"version":3,"sources":["C:\\Users\\vicen\\Documents\\React\\visualizador\\node_modules\\rxjs\\src\\internal\\util\\EmptyError.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAT,QAAiC,oBAAjC;AAwBA,OAAO,IAAM,UAAU,GAAmB,gBAAgB,CAAC,UAAC,MAAD,EAAO;AAAK,SAAA,SAAS,cAAT,GAAuB;AAC5F,IAAA,MAAM,CAAC,IAAD,CAAN;;AACA,SAAK,IAAL,GAAY,YAAZ;AACA,SAAK,OAAL,GAAe,yBAAf;AAHqE,GAAA;AAItE,CAJyD,CAAnD","sourcesContent":["import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n"]},"metadata":{},"sourceType":"module"}