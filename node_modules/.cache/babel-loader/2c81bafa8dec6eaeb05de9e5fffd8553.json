{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { Subscription } from '../Subscription';\nexport var animationFrameProvider = {\n  schedule: function (callback) {\n    var request = requestAnimationFrame;\n    var cancel = cancelAnimationFrame;\n    var delegate = animationFrameProvider.delegate;\n\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n\n    var handle = request(function (timestamp) {\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(function () {\n      return cancel === null || cancel === void 0 ? void 0 : cancel(handle);\n    });\n  },\n  requestAnimationFrame: function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var delegate = animationFrameProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n  },\n  cancelAnimationFrame: function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var delegate = animationFrameProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n  },\n  delegate: undefined\n};","map":{"version":3,"sources":["C:\\Users\\vicen\\Documents\\React\\visualizador\\node_modules\\rxjs\\src\\internal\\scheduler\\animationFrameProvider.ts"],"names":[],"mappings":";AAAA,SAAS,YAAT,QAA6B,iBAA7B;AAcA,OAAO,IAAM,sBAAsB,GAA2B;AAG5D,EAAA,QAAQ,EAAR,UAAS,QAAT,EAAiB;AACf,QAAI,OAAO,GAAG,qBAAd;AACA,QAAI,MAAM,GAA4C,oBAAtD;AACQ,QAAA,QAAQ,GAAK,sBAAsB,CAA3B,QAAR;;AACR,QAAI,QAAJ,EAAc;AACZ,MAAA,OAAO,GAAG,QAAQ,CAAC,qBAAnB;AACA,MAAA,MAAM,GAAG,QAAQ,CAAC,oBAAlB;AACD;;AACD,QAAM,MAAM,GAAG,OAAO,CAAC,UAAC,SAAD,EAAU;AAI/B,MAAA,MAAM,GAAG,SAAT;AACA,MAAA,QAAQ,CAAC,SAAD,CAAR;AACD,KANqB,CAAtB;AAOA,WAAO,IAAI,YAAJ,CAAiB,YAAA;AAAM,aAAA,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAN,MAAM,CAAN;AAAgB,KAAvC,CAAP;AACD,GAnB2D;AAoB5D,EAAA,qBAAqB,EAAA,YAAA;AAAC,QAAA,IAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAO;AAAP,MAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACZ,QAAA,QAAQ,GAAK,sBAAsB,CAA3B,QAAR;AACR,WAAO,CAAC,CAAA,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,qBAAV,KAAmC,qBAApC,EAA0D,KAA1D,CAA0D,KAAA,CAA1D,EAA0D,aAAA,CAAA,EAAA,EAAA,MAAA,CAAI,IAAJ,CAAA,CAA1D,CAAP;AACD,GAvB2D;AAwB5D,EAAA,oBAAoB,EAAA,YAAA;AAAC,QAAA,IAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAO;AAAP,MAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACX,QAAA,QAAQ,GAAK,sBAAsB,CAA3B,QAAR;AACR,WAAO,CAAC,CAAA,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,oBAAV,KAAkC,oBAAnC,EAAwD,KAAxD,CAAwD,KAAA,CAAxD,EAAwD,aAAA,CAAA,EAAA,EAAA,MAAA,CAAI,IAAJ,CAAA,CAAxD,CAAP;AACD,GA3B2D;AA4B5D,EAAA,QAAQ,EAAE;AA5BkD,CAAvD","sourcesContent":["import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}