{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\n\nvar AsyncSubject = function (_super) {\n  __extends(AsyncSubject, _super);\n\n  function AsyncSubject() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._value = null;\n    _this._hasValue = false;\n    _this._isComplete = false;\n    return _this;\n  }\n\n  AsyncSubject.prototype._checkFinalizedStatuses = function (subscriber) {\n    var _a = this,\n        hasError = _a.hasError,\n        _hasValue = _a._hasValue,\n        _value = _a._value,\n        thrownError = _a.thrownError,\n        isStopped = _a.isStopped,\n        _isComplete = _a._isComplete;\n\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value);\n      subscriber.complete();\n    }\n  };\n\n  AsyncSubject.prototype.next = function (value) {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  };\n\n  AsyncSubject.prototype.complete = function () {\n    var _a = this,\n        _hasValue = _a._hasValue,\n        _value = _a._value,\n        _isComplete = _a._isComplete;\n\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && _super.prototype.next.call(this, _value);\n\n      _super.prototype.complete.call(this);\n    }\n  };\n\n  return AsyncSubject;\n}(Subject);\n\nexport { AsyncSubject };","map":{"version":3,"sources":["C:\\Users\\vicen\\Documents\\React\\visualizador\\node_modules\\rxjs\\src\\internal\\AsyncSubject.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,QAAwB,WAAxB;;AASA,IAAA,YAAA,GAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAArC,WAAA,YAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACU,IAAA,KAAA,CAAA,MAAA,GAAmB,IAAnB;AACA,IAAA,KAAA,CAAA,SAAA,GAAY,KAAZ;AACA,IAAA,KAAA,CAAA,WAAA,GAAc,KAAd;;AA4BT;;AAzBW,EAAA,YAAA,CAAA,SAAA,CAAA,uBAAA,GAAV,UAAkC,UAAlC,EAA2D;AACnD,QAAA,EAAA,GAAuE,IAAvE;AAAA,QAAE,QAAQ,GAAA,EAAA,CAAA,QAAV;AAAA,QAAY,SAAS,GAAA,EAAA,CAAA,SAArB;AAAA,QAAuB,MAAM,GAAA,EAAA,CAAA,MAA7B;AAAA,QAA+B,WAAW,GAAA,EAAA,CAAA,WAA1C;AAAA,QAA4C,SAAS,GAAA,EAAA,CAAA,SAArD;AAAA,QAAuD,WAAW,GAAA,EAAA,CAAA,WAAlE;;AACN,QAAI,QAAJ,EAAc;AACZ,MAAA,UAAU,CAAC,KAAX,CAAiB,WAAjB;AACD,KAFD,MAEO,IAAI,SAAS,IAAI,WAAjB,EAA8B;AACnC,MAAA,SAAS,IAAI,UAAU,CAAC,IAAX,CAAgB,MAAhB,CAAb;AACA,MAAA,UAAU,CAAC,QAAX;AACD;AACF,GARS;;AAUV,EAAA,YAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,KAAL,EAAa;AACX,QAAI,CAAC,KAAK,SAAV,EAAqB;AACnB,WAAK,MAAL,GAAc,KAAd;AACA,WAAK,SAAL,GAAiB,IAAjB;AACD;AACF,GALD;;AAOA,EAAA,YAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACQ,QAAA,EAAA,GAAqC,IAArC;AAAA,QAAE,SAAS,GAAA,EAAA,CAAA,SAAX;AAAA,QAAa,MAAM,GAAA,EAAA,CAAA,MAAnB;AAAA,QAAqB,WAAW,GAAA,EAAA,CAAA,WAAhC;;AACN,QAAI,CAAC,WAAL,EAAkB;AAChB,WAAK,WAAL,GAAmB,IAAnB;AACA,MAAA,SAAS,IAAI,MAAA,CAAA,SAAA,CAAM,IAAN,CAAU,IAAV,CAAU,IAAV,EAAW,MAAX,CAAb;;AACA,MAAA,MAAA,CAAA,SAAA,CAAM,QAAN,CAAc,IAAd,CAAc,IAAd;AACD;AACF,GAPD;;AAQF,SAAA,YAAA;AAAC,CA/BD,CAAqC,OAArC,CAAA","sourcesContent":["import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}