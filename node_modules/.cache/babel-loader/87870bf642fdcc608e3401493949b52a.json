{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicen\\\\Documents\\\\React\\\\visualizador\\\\src\\\\Pages\\\\Directorio\\\\RuralidadComunas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, Title, Tooltip, Legend);\nexport default function RuralidadComuna(props) {\n  _s();\n\n  const {\n    cambio,\n    url_base\n  } = props;\n  const arbitraryStackKey = \"stack1\";\n  const arbitraryStackKey2 = \"stack2\";\n  const url = `${url_base}/ruralidad-comuna/`;\n  const [comuna, setComuna] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setComuna(responseJSON);\n  };\n\n  const [todos, setTodos] = useState();\n\n  const fetchApi2 = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setTodos(responseJSON);\n  };\n\n  const labels = [];\n  const valor_rural = [];\n  const valor_urbano = [];\n  const scores = [];\n\n  for (var a in todos) {\n    scores.push(todos[a].content);\n  }\n\n  for (var a in comuna) {\n    if (!labels.includes(comuna[a].cod)) {\n      labels.push(comuna[a].cod);\n    }\n\n    if (comuna[a].rural === 0) {\n      valor_urbano.push(comuna[a].total);\n    } else {\n      valor_rural.push(comuna[a].total);\n    }\n  }\n\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Est. totales\",\n      data: valor_urbano,\n      backgroundColor: \"rgba(148,156,196,0.9)\"\n    }, {\n      label: \"Est. urbanos\",\n      data: valor_urbano,\n      backgroundColor: \"rgba(148,156,196,0.9)\"\n    }, {\n      label: \"Est. rurales\",\n      data: valor_rural,\n      backgroundColor: \"rgb(172,1,52,0.9)\"\n    }]\n  };\n  useEffect(() => {\n    fetchApi();\n    fetchApi2();\n  }, []);\n\n  if (cambio) {\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels,\n        datasets: [{\n          stack: arbitraryStackKey,\n          label: \"Est. urbanos\",\n          data: valor_urbano,\n          backgroundColor: \"rgba(148,156,196,0.9)\"\n        }, {\n          stack: arbitraryStackKey,\n          label: \"Est. rurales\",\n          data: valor_rural,\n          backgroundColor: \"rgb(172,108,52,0.9)\"\n        }]\n      },\n      height: 250,\n      options: {\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    height: 250,\n    options: {\n      maintainAspectRatio: false\n    },\n    data: {\n      labels,\n      datasets: [{\n        stack: arbitraryStackKey,\n        label: \"Est. urbanos\",\n        data: valor_urbano,\n        backgroundColor: \"rgba(148,156,196,0.9)\"\n      }, {\n        stack: arbitraryStackKey2,\n        label: \"Est. rurales\",\n        data: valor_rural,\n        backgroundColor: \"rgb(172,108,52,0.9)\"\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RuralidadComuna, \"tj5Aj9WhsMHk3Nvq+eVLj2jr5p8=\");\n\n_c = RuralidadComuna;\n\nvar _c;\n\n$RefreshReg$(_c, \"RuralidadComuna\");","map":{"version":3,"sources":["C:/Users/vicen/Documents/React/visualizador/src/Pages/Directorio/RuralidadComunas.js"],"names":["React","useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","Title","Tooltip","Legend","register","RuralidadComuna","props","cambio","url_base","arbitraryStackKey","arbitraryStackKey2","url","comuna","setComuna","fetchApi","response","fetch","responseJSON","json","todos","setTodos","fetchApi2","labels","valor_rural","valor_urbano","scores","a","push","content","includes","cod","rural","total","data","datasets","label","backgroundColor","stack","maintainAspectRatio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,UALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;;AAWAP,OAAO,CAACQ,QAAR,CACEP,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;AAUA,eAAe,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAmBF,KAAzB;AACA,QAAMG,iBAAiB,GAAG,QAA1B;AACA,QAAMC,kBAAkB,GAAG,QAA3B;AAEA,QAAMC,GAAG,GAAG,GAAEH,QAAS,oBAAvB;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,EAApC;;AACA,QAAMsB,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;AACA,UAAMM,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAL,IAAAA,SAAS,CAACI,YAAD,CAAT;AACD,GAJD;;AAKA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,EAAlC;;AACA,QAAM6B,SAAS,GAAG,YAAY;AAC5B,UAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;AACA,UAAMM,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAE,IAAAA,QAAQ,CAACH,YAAD,CAAR;AACD,GAJD;;AAMA,QAAMK,MAAM,GAAG,EAAf;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,QAAMC,MAAM,GAAG,EAAf;;AAGA,OAAK,IAAIC,CAAT,IAAcP,KAAd,EAAqB;AACnBM,IAAAA,MAAM,CAACE,IAAP,CAAYR,KAAK,CAACO,CAAD,CAAL,CAASE,OAArB;AACD;;AAED,OAAK,IAAIF,CAAT,IAAcd,MAAd,EAAsB;AACpB,QAAI,CAACU,MAAM,CAACO,QAAP,CAAgBjB,MAAM,CAACc,CAAD,CAAN,CAAUI,GAA1B,CAAL,EAAqC;AACnCR,MAAAA,MAAM,CAACK,IAAP,CAAYf,MAAM,CAACc,CAAD,CAAN,CAAUI,GAAtB;AACD;;AACD,QAAIlB,MAAM,CAACc,CAAD,CAAN,CAAUK,KAAV,KAAoB,CAAxB,EAA2B;AACzBP,MAAAA,YAAY,CAACG,IAAb,CAAkBf,MAAM,CAACc,CAAD,CAAN,CAAUM,KAA5B;AACD,KAFD,MAEO;AACLT,MAAAA,WAAW,CAACI,IAAZ,CAAiBf,MAAM,CAACc,CAAD,CAAN,CAAUM,KAA3B;AACD;AACF;;AACD,QAAMC,IAAI,GAAG;AACXX,IAAAA,MADW;AAEXY,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,cADT;AAEEF,MAAAA,IAAI,EAAET,YAFR;AAGEY,MAAAA,eAAe,EAAE;AAHnB,KADQ,EAMR;AACED,MAAAA,KAAK,EAAE,cADT;AAEEF,MAAAA,IAAI,EAAET,YAFR;AAGEY,MAAAA,eAAe,EAAE;AAHnB,KANQ,EAWR;AACED,MAAAA,KAAK,EAAE,cADT;AAEEF,MAAAA,IAAI,EAAEV,WAFR;AAGEa,MAAAA,eAAe,EAAE;AAHnB,KAXQ;AAFC,GAAb;AAoBA3C,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,QAAQ;AACRO,IAAAA,SAAS;AAEV,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAId,MAAJ,EAAY;AACV,wBACE,QAAC,GAAD;AACE,MAAA,IAAI,EAAE;AACJe,QAAAA,MADI;AAEJY,QAAAA,QAAQ,EAAE,CACR;AACEG,UAAAA,KAAK,EAAE5B,iBADT;AAEE0B,UAAAA,KAAK,EAAE,cAFT;AAGEF,UAAAA,IAAI,EAAET,YAHR;AAIEY,UAAAA,eAAe,EAAE;AAJnB,SADQ,EAOR;AACEC,UAAAA,KAAK,EAAE5B,iBADT;AAEE0B,UAAAA,KAAK,EAAE,cAFT;AAGEF,UAAAA,IAAI,EAAEV,WAHR;AAIEa,UAAAA,eAAe,EAAE;AAJnB,SAPQ;AAFN,OADR;AAkBE,MAAA,MAAM,EAAE,GAlBV;AAmBE,MAAA,OAAO,EAAE;AAAEE,QAAAA,mBAAmB,EAAE;AAAvB;AAnBX;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAED,sBACE,QAAC,GAAD;AACE,IAAA,MAAM,EAAE,GADV;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,mBAAmB,EAAE;AAAvB,KAFX;AAGE,IAAA,IAAI,EAAE;AACJhB,MAAAA,MADI;AAEJY,MAAAA,QAAQ,EAAE,CACR;AACEG,QAAAA,KAAK,EAAE5B,iBADT;AAEE0B,QAAAA,KAAK,EAAE,cAFT;AAGEF,QAAAA,IAAI,EAAET,YAHR;AAIEY,QAAAA,eAAe,EAAE;AAJnB,OADQ,EAOR;AACEC,QAAAA,KAAK,EAAE3B,kBADT;AAEEyB,QAAAA,KAAK,EAAE,cAFT;AAGEF,QAAAA,IAAI,EAAEV,WAHR;AAIEa,QAAAA,eAAe,EAAE;AAJnB,OAPQ;AAFN;AAHR;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAlHuB/B,e;;KAAAA,e","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport default function RuralidadComuna(props) {\r\n  const {cambio, url_base}=props\r\n  const arbitraryStackKey = \"stack1\";\r\n  const arbitraryStackKey2 = \"stack2\";\r\n\r\n  const url =`${url_base}/ruralidad-comuna/`\r\n  const [comuna, setComuna] = useState();\r\n  const fetchApi = async () => {\r\n    const response = await fetch(url);\r\n    const responseJSON = await response.json();\r\n    setComuna(responseJSON);\r\n  };\r\n  const [todos, setTodos] = useState();\r\n  const fetchApi2 = async () => {\r\n    const response = await fetch(url);\r\n    const responseJSON = await response.json();\r\n    setTodos(responseJSON);\r\n  };\r\n\r\n  const labels = [];\r\n  const valor_rural = [];\r\n  const valor_urbano = [];\r\n  const scores = [];\r\n\r\n\r\n  for (var a in todos) {\r\n    scores.push(todos[a].content);\r\n  }\r\n\r\n  for (var a in comuna) {\r\n    if (!labels.includes(comuna[a].cod)) {\r\n      labels.push(comuna[a].cod);\r\n    }\r\n    if (comuna[a].rural === 0) {\r\n      valor_urbano.push(comuna[a].total);\r\n    } else {\r\n      valor_rural.push(comuna[a].total);\r\n    }\r\n  }\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Est. totales\",\r\n        data: valor_urbano,\r\n        backgroundColor: \"rgba(148,156,196,0.9)\",\r\n      },\r\n      {\r\n        label: \"Est. urbanos\",\r\n        data: valor_urbano,\r\n        backgroundColor: \"rgba(148,156,196,0.9)\",\r\n      },\r\n      {\r\n        label: \"Est. rurales\",\r\n        data: valor_rural,\r\n        backgroundColor: \"rgb(172,1,52,0.9)\",\r\n      },\r\n    ],\r\n  };\r\n  useEffect(() => {\r\n    fetchApi();\r\n    fetchApi2();\r\n\r\n  }, []);\r\n\r\n  if (cambio) {\r\n    return (\r\n      <Bar\r\n        data={{\r\n          labels,\r\n          datasets: [\r\n            {\r\n              stack: arbitraryStackKey,\r\n              label: \"Est. urbanos\",\r\n              data: valor_urbano,\r\n              backgroundColor: \"rgba(148,156,196,0.9)\",\r\n            },\r\n            {\r\n              stack: arbitraryStackKey,\r\n              label: \"Est. rurales\",\r\n              data: valor_rural,\r\n              backgroundColor: \"rgb(172,108,52,0.9)\",\r\n            },\r\n          ],\r\n        }}\r\n        height={250}\r\n        options={{ maintainAspectRatio: false }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Bar\r\n      height={250}\r\n      options={{ maintainAspectRatio: false }}\r\n      data={{\r\n        labels,\r\n        datasets: [\r\n          {\r\n            stack: arbitraryStackKey,\r\n            label: \"Est. urbanos\",\r\n            data: valor_urbano,\r\n            backgroundColor: \"rgba(148,156,196,0.9)\",\r\n          },\r\n          {\r\n            stack: arbitraryStackKey2,\r\n            label: \"Est. rurales\",\r\n            data: valor_rural,\r\n            backgroundColor: \"rgb(172,108,52,0.9)\",\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}