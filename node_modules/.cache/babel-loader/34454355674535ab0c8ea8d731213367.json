{"ast":null,"code":"import { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\nexport function isObservable(obj) {\n  return !!obj && (obj instanceof Observable || isFunction(obj.lift) && isFunction(obj.subscribe));\n}","map":{"version":3,"sources":["C:\\Users\\vicen\\Documents\\React\\visualizador\\node_modules\\rxjs\\src\\internal\\util\\isObservable.ts"],"names":[],"mappings":"AACA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,UAAT,QAA2B,cAA3B;AAMA,OAAM,SAAU,YAAV,CAAuB,GAAvB,EAA+B;AAGnC,SAAO,CAAC,CAAC,GAAF,KAAU,GAAG,YAAY,UAAf,IAA8B,UAAU,CAAC,GAAG,CAAC,IAAL,CAAV,IAAwB,UAAU,CAAC,GAAG,CAAC,SAAL,CAA1E,CAAP;AACD","sourcesContent":["/** prettier */\nimport { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj: any): obj is Observable<unknown> {\n  // The !! is to ensure that this publicly exposed function returns\n  // `false` if something like `null` or `0` is passed.\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n"]},"metadata":{},"sourceType":"module"}