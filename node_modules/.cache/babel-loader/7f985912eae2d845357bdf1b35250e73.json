{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicen\\\\Documents\\\\React\\\\visualizador\\\\src\\\\Pages\\\\Directorio\\\\Estado.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Pie, Bar } from \"react-chartjs-2\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function Estado(props) {\n  _s();\n\n  const {\n    cambio,\n    url_base\n  } = props;\n  const url = `${url_base}/estados/`;\n  const url2 = `${url_base}/ruralidad-estado/`;\n  const [estados, setEstados] = useState();\n  const [estadoRural, setEstadoRural] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setEstados(responseJSON);\n    const response2 = await fetch(url2);\n    const responseJSON2 = await response2.json();\n    setEstadoRural(responseJSON2);\n  };\n\n  const labels = [];\n  const scores = [];\n  const valor_rural = [];\n  const valor_urbano = [];\n\n  for (var a in estado) {\n    if (!labels.includes(estado[a].cod)) {\n      labels.push(estado[a].cod);\n    }\n\n    if (estado[a].rural === 0) {\n      valor_urbano.push(estado[a].total);\n    } else {\n      valor_rural.push(estado[a].total);\n    }\n  }\n\n  for (var a in estados) {\n    labels.push(estados[a].cod);\n    scores.push(estados[a].total);\n  }\n\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Mis datos\",\n      data: scores,\n      backgroundColor: [\"rgba(148,156,196,0.9)\", \"rgba(172,108,52,0.9)\", \"rgba(210,177,144,0.9)\", \"rgba(60,141,188,0.9)\", \"rgba(190,198,220,0.9)\"]\n    }]\n  };\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  if (cambio) {\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      plugins: [ChartDataLabels],\n      height: 250,\n      options: {\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Pie, {\n    data: data,\n    plugins: [ChartDataLabels],\n    height: 250,\n    options: {\n      maintainAspectRatio: false\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Estado, \"6jXxJ++bzTSkqVWc6NiGxCgO2NI=\");\n\n_c = Estado;\n\nvar _c;\n\n$RefreshReg$(_c, \"Estado\");","map":{"version":3,"sources":["C:/Users/vicen/Documents/React/visualizador/src/Pages/Directorio/Estado.js"],"names":["React","useState","useEffect","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","Bar","ChartDataLabels","register","Estado","props","cambio","url_base","url","url2","estados","setEstados","estadoRural","setEstadoRural","fetchApi","response","fetch","responseJSON","json","response2","responseJSON2","labels","scores","valor_rural","valor_urbano","a","estado","includes","cod","push","rural","total","data","datasets","label","backgroundColor","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Pie, Bar } from \"react-chartjs-2\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport default function Estado(props) {\r\n  const { cambio, url_base } = props;\r\n  const url =`${url_base}/estados/`;\r\n  const url2 = `${url_base}/ruralidad-estado/`;\r\n\r\n  const [estados, setEstados] = useState();\r\n  const [estadoRural, setEstadoRural] = useState();\r\n\r\n  \r\n  const fetchApi = async () => {\r\n    const response = await fetch(url);\r\n    const responseJSON = await response.json();\r\n    setEstados(responseJSON);\r\n\r\n    const response2 = await fetch(url2);\r\n    const responseJSON2 = await response2.json();\r\n    setEstadoRural(responseJSON2);\r\n  };\r\n\r\n  const labels = [];\r\n  const scores = [];\r\n  const valor_rural = [];\r\n  const valor_urbano = [];\r\n\r\n  for (var a in estado) {\r\n    if (!labels.includes(estado[a].cod)) {\r\n      labels.push(estado[a].cod);\r\n    }\r\n    if (estado[a].rural === 0) {\r\n      valor_urbano.push(estado[a].total);\r\n    } else {\r\n      valor_rural.push(estado[a].total);\r\n    }\r\n  }\r\n  for (var a in estados) {\r\n    labels.push(estados[a].cod);\r\n    scores.push(estados[a].total);\r\n  }\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Mis datos\",\r\n        data: scores,\r\n        backgroundColor: [\r\n          \"rgba(148,156,196,0.9)\",\r\n          \"rgba(172,108,52,0.9)\",\r\n          \"rgba(210,177,144,0.9)\",\r\n          \"rgba(60,141,188,0.9)\",\r\n          \"rgba(190,198,220,0.9)\",\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  useEffect(() => {\r\n    fetchApi();\r\n  }, []);\r\n\r\n  if (cambio) {\r\n    return (\r\n      <Bar\r\n        data={data}\r\n        plugins={[ChartDataLabels]}\r\n        height={250}\r\n        options={{ maintainAspectRatio: false }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Pie\r\n      data={data}\r\n      plugins={[ChartDataLabels]}\r\n      height={250}\r\n      options={{ maintainAspectRatio: false }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}