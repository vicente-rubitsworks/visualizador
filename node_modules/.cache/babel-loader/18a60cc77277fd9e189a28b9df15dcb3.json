{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicen\\\\Documents\\\\React\\\\visualizador\\\\src\\\\Pages\\\\ResumenDirectorio\\\\Comunas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function Comunas(props) {\n  _s();\n\n  const {\n    url_base\n  } = props;\n  const url = `${url_base}/total/`;\n  const [query, setQuery] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        variable: \"NOM_COM_RBD\"\n      })\n    });\n    const responseJSON = await response.json();\n    setQuery(responseJSON);\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n  const scores = [];\n  const scores1 = [];\n  const scores2 = [];\n  const scores3 = [];\n\n  for (var a in query) {\n    scores.push(query[a].total);\n    console.log(query[a]);\n  }\n\n  const colors = [\"rgba(148,156,196,0.9)\", \"rgba(172,108,52,0.9)\", \"rgba(210,177,144,0.9)\", \"rgba(60,141,188,0.9)\", \"rgba(190,198,220,0.9)\"];\n  const data = {\n    labels: [\"2018\", \"2019\", \"2020\", \"2021\"],\n    datasets: [{\n      label: \"Est. totales\",\n      data: scores,\n      borderColor: colors[3],\n      backgroundColor: colors[3],\n      fill: true\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data,\n    height: 250,\n    options: {\n      maintainAspectRatio: false\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comunas, \"Yv2iIHMaz4skxcgDEqLvrRfGNrc=\");\n\n_c = Comunas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comunas\");","map":{"version":3,"sources":["C:/Users/vicen/Documents/React/visualizador/src/Pages/ResumenDirectorio/Comunas.js"],"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","Bar","register","Comunas","props","url_base","url","query","setQuery","fetchApi","response","fetch","method","headers","Accept","body","JSON","stringify","variable","responseJSON","json","scores","scores1","scores2","scores3","a","push","total","console","log","colors","data","labels","datasets","label","borderColor","backgroundColor","fill","maintainAspectRatio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;AAUA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;;AACAT,OAAO,CAACU,QAAR,CACET,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;AAUA,eAAe,SAASI,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAME,GAAG,GAAI,GAAED,QAAS,SAAxB;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,EAAlC;;AAEA,QAAMoB,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAChCM,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFuB;AAMhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,QAAQ,EAAE;AADS,OAAf;AAN0B,KAAN,CAA5B;AAUA,UAAMC,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAA3B;AACAZ,IAAAA,QAAQ,CAACW,YAAD,CAAR;AACD,GAbD;;AAcA7B,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMY,MAAM,GAAG,EAAf;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,OAAO,GAAG,EAAhB;;AAEA,OAAK,IAAIC,CAAT,IAAclB,KAAd,EAAqB;AACnBc,IAAAA,MAAM,CAACK,IAAP,CAAYnB,KAAK,CAACkB,CAAD,CAAL,CAASE,KAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAK,CAACkB,CAAD,CAAjB;AACD;;AAED,QAAMK,MAAM,GAAG,CACb,uBADa,EAEb,sBAFa,EAGb,uBAHa,EAIb,sBAJa,EAKb,uBALa,CAAf;AAOA,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CADG;AAEXC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,cADT;AAEEH,MAAAA,IAAI,EAAEV,MAFR;AAGEc,MAAAA,WAAW,EAAEL,MAAM,CAAC,CAAD,CAHrB;AAIEM,MAAAA,eAAe,EAAEN,MAAM,CAAC,CAAD,CAJzB;AAKEO,MAAAA,IAAI,EAAE;AALR,KADQ;AAFC,GAAb;AAaA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEN,IAAZ;AAAkB,IAAA,MAAM,EAAE,GAA1B;AAA+B,IAAA,OAAO,EAAE;AAAEO,MAAAA,mBAAmB,EAAE;AAAvB;AAAxC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAxDuBnC,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport default function Comunas(props) {\r\n  const { url_base } = props;\r\n  const url = `${url_base}/total/`;\r\n  const [query, setQuery] = useState();\r\n\r\n  const fetchApi = async () => {\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        variable: \"NOM_COM_RBD\",\r\n      }),\r\n    });\r\n    const responseJSON = await response.json();\r\n    setQuery(responseJSON);\r\n  };\r\n  useEffect(() => {\r\n    fetchApi();\r\n  }, []);\r\n\r\n  const scores = [];\r\n  const scores1 = [];\r\n  const scores2 = [];\r\n  const scores3 = [];\r\n\r\n  for (var a in query) {\r\n    scores.push(query[a].total);\r\n    console.log(query[a]);\r\n  }\r\n\r\n  const colors = [\r\n    \"rgba(148,156,196,0.9)\",\r\n    \"rgba(172,108,52,0.9)\",\r\n    \"rgba(210,177,144,0.9)\",\r\n    \"rgba(60,141,188,0.9)\",\r\n    \"rgba(190,198,220,0.9)\",\r\n  ];\r\n  const data = {\r\n    labels: [\"2018\", \"2019\", \"2020\", \"2021\"],\r\n    datasets: [\r\n      {\r\n        label: \"Est. totales\",\r\n        data: scores,\r\n        borderColor: colors[3],\r\n        backgroundColor: colors[3],\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Line data={data} height={250} options={{ maintainAspectRatio: false }} />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}