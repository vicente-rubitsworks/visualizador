{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicen\\\\Documents\\\\React\\\\visualizador\\\\src\\\\Pages\\\\Directorio\\\\Dependencias.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function ChartDependencias() {\n  _s();\n\n  const url = 'https://analizador-backend.herokuapp.com/directorio/dependencia/';\n  const [todos, setTodos] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setTodos(responseJSON);\n  };\n\n  const labels = [];\n  const scores = [];\n\n  for (var a in todos) {\n    labels.push(todos[a].cod);\n    scores.push(todos[a].total);\n  }\n\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Mis datos\",\n      data: scores,\n      backgroundColor: ['rgba(148,156,196,0.9)', 'rgba(172,108,52,0.9)', 'rgba(210,177,144,0.9)', 'rgba(60,141,188,0.9)', 'rgba(190,198,220,0.9)']\n    }]\n  };\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  if (cambio) {\n    pass;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Pie, {\n    data: data,\n    plugins: [ChartDataLabels],\n    height: 200,\n    options: {\n      maintainAspectRatio: false\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ChartDependencias, \"p6SBc2ZNam5s5kRD+fts6JgCy3M=\");\n\n_c = ChartDependencias;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartDependencias\");","map":{"version":3,"sources":["C:/Users/vicen/Documents/React/visualizador/src/Pages/Directorio/Dependencias.js"],"names":["React","useState","useEffect","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","ChartDataLabels","register","ChartDependencias","url","todos","setTodos","fetchApi","response","fetch","responseJSON","json","labels","scores","a","push","cod","total","data","datasets","label","backgroundColor","cambio","pass","maintainAspectRatio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,KAAK,IAAIC,OAAlB,EAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,UAA9D;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;AAEAL,OAAO,CAACM,QAAR,CAAiBL,UAAjB,EAA6BC,OAA7B,EAAsCC,MAAtC;AAGA,eAAe,SAASI,iBAAT,GAA6B;AAAA;;AACxC,QAAMC,GAAG,GAAE,kEAAX;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBb,QAAQ,EAAhC;;AACA,QAAMc,QAAQ,GAAE,YAAW;AACzB,UAAMC,QAAQ,GAAE,MAAMC,KAAK,CAACL,GAAD,CAA3B;AACA,UAAMM,YAAY,GAAC,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AACAL,IAAAA,QAAQ,CAACI,YAAD,CAAR;AACD,GAJD;;AAMA,QAAME,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAT,IAAcT,KAAd,EAAoB;AAClBO,IAAAA,MAAM,CAACG,IAAP,CAAYV,KAAK,CAACS,CAAD,CAAL,CAASE,GAArB;AACAH,IAAAA,MAAM,CAACE,IAAP,CAAYV,KAAK,CAACS,CAAD,CAAL,CAASG,KAArB;AAED;;AAED,QAAMC,IAAI,GAAG;AACXN,IAAAA,MADW;AAEXO,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEF,MAAAA,IAAI,EAAEL,MAFR;AAGEQ,MAAAA,eAAe,EAAE,CAAC,uBAAD,EAA2B,sBAA3B,EAAmD,uBAAnD,EAA4E,sBAA5E,EAAoG,uBAApG;AAHnB,KADQ;AAFC,GAAb;AAUA3B,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAGe,MAAH,EAAU;AACRC,IAAAA,IAAI;AACL;;AAED,sBAAO,QAAC,GAAD;AAAK,IAAA,IAAI,EAAEL,IAAX;AAAiB,IAAA,OAAO,EAAE,CAACjB,eAAD,CAA1B;AAA6C,IAAA,MAAM,EAAE,GAArD;AAA0D,IAAA,OAAO,EAAE;AAACuB,MAAAA,mBAAmB,EAAE;AAAtB;AAAnE;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GArCqBrB,iB;;KAAAA,iB","sourcesContent":["import React , {useState, useEffect} from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n\r\nexport default function ChartDependencias() {\r\n    const url ='https://analizador-backend.herokuapp.com/directorio/dependencia/'\r\n    const [todos, setTodos]=useState()\r\n    const fetchApi= async () =>{\r\n      const response =await fetch(url)\r\n      const responseJSON=await response.json()\r\n      setTodos(responseJSON)\r\n    }\r\n  \r\n    const labels = [];\r\n    const scores = [];\r\n    \r\n    for (var a in todos){\r\n      labels.push(todos[a].cod)\r\n      scores.push(todos[a].total)\r\n      \r\n    }\r\n    \r\n    const data = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: \"Mis datos\",\r\n          data: scores,\r\n          backgroundColor: ['rgba(148,156,196,0.9)' , 'rgba(172,108,52,0.9)', 'rgba(210,177,144,0.9)', 'rgba(60,141,188,0.9)' ,'rgba(190,198,220,0.9)'],\r\n        },\r\n      ],\r\n    };\r\n    useEffect(() => {\r\n      fetchApi()\r\n    }, [])\r\n\r\n    if(cambio){\r\n      pass\r\n    }\r\n   \r\n    return <Pie data={data} plugins={[ChartDataLabels]} height={200} options={{maintainAspectRatio: false}}  />;\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}