{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicen\\\\Documents\\\\React\\\\visualizador\\\\src\\\\Pages\\\\ResumenDirectorio\\\\Totales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function Totales(props) {\n  _s();\n\n  const {\n    cambio\n  } = props;\n  const arbitraryStackKey = \"stack1\";\n  const arbitraryStackKey2 = \"stack2\";\n  const {\n    url_base\n  } = props;\n  const url = `${url_base}/total/`;\n  const [query, setQuery] = useState();\n  const [estados, setEstados] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setQuery(responseJSON);\n  };\n\n  const fetchEstados = async () => {\n    const response = await fetch(`${url_base}/estados/`);\n    const responseJSON = await response.json();\n    setEstados(responseJSON);\n  };\n\n  useEffect(() => {\n    fetchApi();\n    fetchEstados();\n  }, []);\n  const scores = [];\n  const scores1 = [];\n  const scores2 = [];\n  const scores3 = [];\n\n  for (var a in query) {\n    scores.push(query[a].total);\n    console.log(a);\n  }\n\n  for (var a in estados) {\n    scores1.push(estados[a].RBD[1]);\n    scores2.push(estados[a].RBD[2]);\n    scores3.push(estados[a].RBD[3]);\n    console.log(a);\n  }\n\n  const colors = [\"rgba(148,156,196,0.9)\", \"rgba(172,108,52,0.9)\", \"rgba(210,177,144,0.9)\", \"rgba(60,141,188,0.9)\", \"rgba(190,198,220,0.9)\"];\n  const data = {\n    labels: [\"2019\", \"2020\", \"2021\"],\n    datasets: [{\n      label: \"Est. totales\",\n      data: scores,\n      backgroundColor: colors[3],\n      fill: true\n    }, {\n      stack: arbitraryStackKey2,\n      label: \"Estab. activos\",\n      data: scores1,\n      backgroundColor: colors[0],\n      fill: true\n    }, {\n      stack: arbitraryStackKey2,\n      label: \"Estab. en receso\",\n      data: scores2,\n      backgroundColor: colors[1],\n      fill: true\n    }, {\n      stack: arbitraryStackKey2,\n      label: \"Estab. cerrados\",\n      data: scores3,\n      backgroundColor: colors[2],\n      fill: true\n    }]\n  };\n\n  if (cambio) {\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      height: 250,\n      options: {\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data,\n    height: 250,\n    options: {\n      maintainAspectRatio: false\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Totales, \"3OB9yvF/l0g9V/4e1b+6gKdoQ0w=\");\n\n_c = Totales;\n\nvar _c;\n\n$RefreshReg$(_c, \"Totales\");","map":{"version":3,"sources":["C:/Users/vicen/Documents/React/visualizador/src/Pages/ResumenDirectorio/Totales.js"],"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","Bar","register","Totales","props","cambio","arbitraryStackKey","arbitraryStackKey2","url_base","url","query","setQuery","estados","setEstados","fetchApi","response","fetch","responseJSON","json","fetchEstados","scores","scores1","scores2","scores3","a","push","total","console","log","RBD","colors","data","labels","datasets","label","backgroundColor","fill","stack","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport default function Totales(props) {\r\n  const {cambio} = props;\r\n  const arbitraryStackKey = \"stack1\";\r\n  const arbitraryStackKey2 = \"stack2\";\r\n  const { url_base } = props;\r\n\r\n  const url = `${url_base}/total/`;\r\n\r\n  const [query, setQuery] = useState();\r\n  const [estados, setEstados] = useState();\r\n\r\n  const fetchApi = async () => {\r\n    const response = await fetch(url);\r\n    const responseJSON = await response.json();\r\n\r\n    setQuery(responseJSON);\r\n  };\r\n  const fetchEstados = async () => {\r\n    const response = await fetch(`${url_base}/estados/`);\r\n    const responseJSON = await response.json();\r\n\r\n    setEstados(responseJSON);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchApi();\r\n    fetchEstados();\r\n  }, []);\r\n\r\n  const scores = [];\r\n  const scores1 = [];\r\n  const scores2 = [];\r\n  const scores3 = [];\r\n\r\n  for (var a in query) {\r\n    scores.push(query[a].total);\r\n    console.log(a);\r\n  }\r\n\r\n  for (var a in estados) {\r\n    scores1.push(estados[a].RBD[1]);\r\n    scores2.push(estados[a].RBD[2]);\r\n    scores3.push(estados[a].RBD[3]);\r\n\r\n    console.log(a);\r\n  }\r\n  const colors = [\r\n    \"rgba(148,156,196,0.9)\",\r\n    \"rgba(172,108,52,0.9)\",\r\n    \"rgba(210,177,144,0.9)\",\r\n    \"rgba(60,141,188,0.9)\",\r\n    \"rgba(190,198,220,0.9)\",\r\n  ];\r\n  const data = {\r\n    labels: [\"2019\", \"2020\", \"2021\"],\r\n    datasets: [\r\n      {\r\n        label: \"Est. totales\",\r\n        data: scores,\r\n        backgroundColor: colors[3],\r\n        fill: true,\r\n      },\r\n      {\r\n        stack: arbitraryStackKey2,\r\n        label: \"Estab. activos\",\r\n        data: scores1,\r\n        backgroundColor: colors[0],\r\n        fill: true,\r\n      },\r\n      {\r\n        stack: arbitraryStackKey2,\r\n        label: \"Estab. en receso\",\r\n        data: scores2,\r\n        backgroundColor: colors[1],\r\n        fill: true,\r\n      },\r\n      {\r\n        stack: arbitraryStackKey2,\r\n        label: \"Estab. cerrados\",\r\n        data: scores3,\r\n        backgroundColor: colors[2],\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (cambio) {\r\n    return (\r\n      <Bar data={data} height={250} options={{ maintainAspectRatio: false }} />\r\n    );\r\n  }\r\n  return (\r\n    <Line data={data} height={250} options={{ maintainAspectRatio: false }} />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}